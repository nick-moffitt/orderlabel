if(specifically_ordered == T &
inherent_order_label == F){ #Arranging for specific label first
dataset <- dataset %>% reverse_group(rev_group)
freqs1 <- dataset %>%
dplyr::filter(
group_var == group_var[1] &
label == label_specific
) %>%
dplyr::arrange(
desc(result)
)
freqs2 <- dataset %>%
dplyr::filter(
group_var == group_var[1] &
label != label_specific
) %>%
dplyr::arrange(
desc(result)
) %>%
reverse_label_unordered(rev_label)
freqs3 <- dataset %>%
dplyr::filter(
group_var != group_var[1]
)
dataset <- dplyr::bind_rows(freqs1, freqs2, freqs3) %>%
dplyr::mutate(
label = forcats::fct_inorder(label),
percent_label = ifelse(
label == label_specific & group_var == group_var[1],
str_c(result * 100, '%'),
str_c(result * 100)
)
) %>%
dplyr::mutate(
group_var = forcats::fct_inorder(group_var)
)
} else{
dataset <- dataset
}
}
#### Grouped Ordered 3 ####
grouped_ordered3 <- function(
dataset,
inherent_order_label,
inherent_order_group,
specifically_ordered,
rev_group,
rev_label
){
if(inherent_order_label == F &
specifically_ordered == F){
dataset <- dataset %>%
dplyr::arrange(
group_var, desc(result)
) %>%
reverse_label_unordered(rev_label) %>%
reverse_group(rev_group) %>%
dplyr::mutate(
label = forcats::fct_inorder(label),
percent_label = ifelse(
label == label[1] & group_var == group_var[1],
str_c(result * 100, '%'),
str_c(result * 100)
)
) %>%
dplyr::mutate(
group_var = forcats::fct_inorder(group_var)
)
} else{
dataset <- dataset
}
}
#### Grouped Ordered 4 ####
grouped_ordered4 <- function(
dataset,
inherent_order_label,
inherent_order_group,
specifically_ordered,
rev_group
){
if(inherent_order_label == T &
specifically_ordered == F
){
dataset <- dataset %>%
dplyr::arrange(
group_var, value, result
) %>%
reverse_group(rev_group) %>%
dplyr::mutate(
label = forcats::fct_inorder(label),
percent_label = ifelse(
label == label[1] & group_var == group_var[1],
str_c(result * 100, '%'),
str_c(result * 100)
)
) %>%
dplyr::mutate(
group_var = forcats::fct_inorder(group_var)
)
} else{
dataset <- dataset
}
}
#### (5) Grouped Unordered Section ####
section_grouped_unordered <- function(
dataset,
specifically_ordered,
label_specific,
inherent_order_label,
group_var,
inherent_order_group,
group_specific,
specifically_ordered_group,
rev_group,
rev_label
) {
if(specifically_ordered_group == F &
inherent_order_group == F
){
dataset <- dataset %>%
dplyr::ungroup() %>%
dplyr::mutate(
group_var = as_factor(group_var),
group_var = as.character.factor(group_var)
)
dataset <- grouped_unordered1(dataset, inherent_order_label, inherent_order_group, specifically_ordered, label_specific, rev_group, rev_label)
dataset <- grouped_unordered2(dataset, inherent_order_label, inherent_order_group, specifically_ordered, label_specific, rev_group)
dataset <- grouped_unordered3(dataset, inherent_order_label, inherent_order_group, specifically_ordered, rev_group, rev_label)
dataset <- grouped_unordered4(dataset, inherent_order_label, inherent_order_group, specifically_ordered, rev_group)
} else {
dataset <- dataset
}
return(dataset)
}
#### Grouped Unordered 1 ####
grouped_unordered1 <- function(
dataset,
inherent_order_label,
inherent_order_group,
specifically_ordered,
label_specific,
rev_group,
rev_label
){
if(specifically_ordered == T &
inherent_order_label == F){
freqs1 <- dataset %>%
dplyr::filter(
label == label_specific
) %>%
dplyr::arrange(
desc(result)
) %>%
reverse_label_unordered(rev_label) %>%
reverse_group(rev_group)
group1 <- freqs1$group_var[1]
freqs2 <- dataset %>%
dplyr::filter(
label != label_specific &
group_var == group1
) %>%
dplyr::arrange(
desc(result)
)
freqs3 <- dataset %>%
dplyr::filter(
label != label_specific &
group_var != group1
)
dataset <- dplyr::bind_rows(freqs1, freqs2, freqs3) %>%
dplyr::mutate(
percent_label = ifelse(
label == label_specific & group_var == group_var[1],
str_c(result * 100, '%'),
str_c(result * 100)
),
label = forcats::fct_inorder(label)
) %>%
dplyr::mutate(
group_var = forcats::fct_inorder(group_var)
)
} else{
dataset <- dataset
}
}
#### Grouped Unordered 2 ####
grouped_unordered2 <- function(
dataset,
inherent_order_label,
inherent_order_group,
specifically_ordered,
label_specific,
rev_group
){
if(specifically_ordered == T &
inherent_order_label == T){ #Arranging for specific label first
freqs1 <- dataset %>%
dplyr::filter(
label == label_specific
) %>%
dplyr::arrange(
value, desc(result), group_var
) %>% reverse_group(rev_group)
group1 <- freqs1$group_var[1]
freqs2 <- dataset %>%
dplyr::filter(
label != label_specific &
group_var == group1
) %>%
dplyr::arrange(
value
)
freqs3 <- dataset %>%
dplyr::filter(
label != label_specific &
group_var != group1
)
dataset <- dplyr::bind_rows(freqs1, freqs2, freqs3) %>%
dplyr::mutate(
percent_label = ifelse(
label == label_specific & group_var == group_var[1],
str_c(result * 100, '%'),
str_c(result * 100)
),
label = forcats::fct_inorder(label)
) %>%
dplyr::mutate(
group_var = forcats::fct_inorder(group_var)
)
} else{
dataset <- dataset
}
}
#### Grouped Unordered 3 ####
grouped_unordered3 <- function(
dataset,
inherent_order_label,
inherent_order_group,
specifically_ordered,
rev_group,
rev_label
){
if(inherent_order_label == F &
specifically_ordered == F
){
freqs1 <- dataset %>%
dplyr::arrange(
desc(result)
)  %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
) %>%
reverse_label_unordered(rev_label) %>%
dplyr::filter(
label == label[1]
) %>% reverse_group(rev_group)
group1 = freqs1$label[1]
freqs2 <- dataset %>%
dplyr::filter(
label != group1
) %>%
dplyr::arrange(
desc(result)
) %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
) %>% reverse_label_unordered(rev_label)
dataset <- dplyr::bind_rows(freqs1, freqs2) %>%
dplyr::mutate(
group_var = forcats::fct_inorder(group_var),
percent_label = ifelse(
label == group1 & group_var == group_var[1],
str_c(result * 100, '%'),
str_c(result * 100)
)
) %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
)
} else{
dataset <- dataset
}
}
#### Grouped Unordered 4 ####
grouped_unordered4 <- function(
dataset,
inherent_order_label,
inherent_order_group,
specifically_ordered,
rev_group
){
if(inherent_order_label == T &
specifically_ordered == F
)
{
dataset <- dataset %>%
dplyr::arrange(
value, desc(result), group_var
) %>% reverse_group(rev_group) %>%
dplyr::mutate(
label = forcats::fct_inorder(label),
percent_label = ifelse(
label == label[1] & group_var == group_var[1],
str_c(result * 100, '%'),
str_c(result * 100)
)
) %>%
dplyr::mutate(
group_var = forcats::fct_inorder(group_var)
)
} else{
dataset <- dataset
}
}
#### Horizontal ####
horizontal_chart <- function(
dataset,
horizontal,
grouped
){
if(horizontal == T){
if(grouped == F){
dataset <- dataset %>%
dplyr::mutate(
label = forcats::fct_rev(label)
)
} else{ #grouped == T
dataset <- dataset %>%
dplyr::mutate(
label = forcats::fct_rev(label)
) %>%
dplyr::mutate(
group_var = forcats::fct_rev(group_var)
)
}
} else{
dataset <- dataset
}
}
#### Stacked ####
stacked_chart <- function(
dataset,
stacked,
grouped,
inherent_order_group,
specifically_ordered
){
if(stacked == T &
grouped == F){
dataset <- dataset  %>%
dplyr::mutate(
label = forcats::fct_rev(label)
)
} else if(stacked == T &
grouped == T){
dataset <- dataset %>%
dplyr::mutate(
label = forcats::fct_rev(label)
) %>%
dplyr::mutate(
group_var = forcats::fct_rev(group_var)
)
} else{
dataset <- dataset
}
}
#### MS Stacked ####
stacked_chart_ms <- function(
dataset,
ms_stacked,
grouped,
inherent_order_group,
specifically_ordered_group
){
if(ms_stacked == T &
grouped == T){
dataset <- dataset %>%
dplyr::mutate(
group_var = forcats::fct_rev(group_var)
)
} else{
dataset <- dataset
}
}
#### None / Other ####
none_other <- function(
dataset,
none_other,
grouped
){
if(none_other == T){
dataset <- dataset %>%
arrange(
label = fct_relevel(
label,
"Other",
'None of the above',
after = Inf
)
) %>%
mutate(
label = fct_inorder(label)
)
} else{
dataset <- dataset
}
#For grouped
if(grouped == T){
dataset <- dataset %>%
mutate(group_var = fct_inorder(group_var))
} else{
dataset <- dataset
}
}
frequencies <- responses %>%
freqs(
QFEE1_top,
QFEE2_top,
QFEE3_top,
QFEE4_top,
nas = F,
wt = weights
) %>%
filter( label == 1) %>%
ungroup() %>%
mutate(
label = mapvalues(
variable,
from = str_c('QFEE', 1:4, '_top'),
to = c(
'One',
'Two',
'Three',
'Four'
)
)
# )  %>%
# select(
#   -label
) %>% order_label(
#horizontal = T,
#inherent_order_label = T,
#rev_label = T,
#label_specific = 'Two',
# label_var = stat
)
chart <- bar1()
#chart <- bar1_hor()
chart
frequencies <- responses %>%
freqs(
QFEE1_top,
QFEE2_top,
QFEE3_top,
QFEE4_top,
nas = F,
wt = weights
) %>%
filter( label == 1) %>%
ungroup() %>%
mutate(
label = mapvalues(
variable,
from = str_c('QFEE', 1:4, '_top'),
to = c(
'One',
'Two',
'Three',
'Four'
)
)
# )  %>%
# select(
#   -label
) %>% order_label(
#horizontal = T,
inherent_order_label = T,
#rev_label = T,
#label_specific = 'Two',
# label_var = stat
)
chart <- bar1()
#chart <- bar1_hor()
chart
#### None Other Test ####
# none_other
other_ungrouped <- ungrouped_freqs %>%
mutate(
label = case_when(
label == 'One' ~ 'Other',
label == 'Two' ~ 'None of the above',
T ~ label
)
)
# none_other
other_grouped <- grouped_freqs %>%
mutate(
group_var = district,
label = case_when(
label == 'One' ~ 'Other',
label == 'Two' ~ 'None of the above',
T ~ label
)
)
frequencies <- ungrouped_freqs %>%
order_label(
#horizontal = T,
inherent_order_label = T,
#rev_label = T,
#label_specific = 'Two',
# label_var = stat
)
