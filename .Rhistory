if(inherent_order_label == F &
specifically_ordered == F){
dataset <- dataset %>%
dplyr::arrange(
group_var, desc(result)
) %>%
reverse_label_unordered(rev_label) %>%
reverse_group(rev_group) %>%
dplyr::mutate(
label = forcats::fct_inorder(label),
percent_label = ifelse(
label == label[1] & group_var == group_var[1],
str_c(result * 100, '%'),
str_c(result * 100)
)
) %>%
dplyr::mutate(
group_var = forcats::fct_inorder(group_var)
)
} else{
dataset <- dataset
}
}
#### Grouped Ordered 4 ####
grouped_ordered4 <- function(
dataset,
inherent_order_label,
inherent_order_group,
specifically_ordered,
rev_group
){
if(inherent_order_label == T &
specifically_ordered == F
){
dataset <- dataset %>%
dplyr::arrange(
group_var, value, variable, result
) %>%
reverse_group(rev_group) %>%
dplyr::mutate(
label = forcats::fct_inorder(label),
percent_label = ifelse(
label == label[1] & group_var == group_var[1],
str_c(result * 100, '%'),
str_c(result * 100)
)
) %>%
dplyr::mutate(
group_var = forcats::fct_inorder(group_var)
)
} else{
dataset <- dataset
}
}
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
#inherent_order_group = T,
rev_label = T,
rev_group = T,
label_specific = 'Three',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar_hor()
#chart <- groupedbar()
chart
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
inherent_order_group = T,
#rev_label = T,
#rev_group = T,
#label_specific = 'Three',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar_hor()
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
inherent_order_group = T,
#rev_label = T,
#rev_group = T,
label_specific = 'Three',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
#### Final Function ####
order_label <- function(
dataset, #will likely be frequencies
label_var = label,
inherent_order_label = F,
group_var = F,
inherent_order_group = F,
label_specific = NA,
group_specific = NA,
stacked = F,
ms_stacked = F,
horizontal = F,
rev_label = F,
rev_group = F,
l1= label[1],
g1 = group_var[1]
) {
options(warn = -1)
###Flags
#Enquo flags
flag <- dplyr::enquo(l1)
flag2 <- dplyr::enquo(label_var)
flag3 <- dplyr::enquo(group_var)
flag4 <- dplyr::enquo(g1)
#Stacked flags: bars always inherently ordered
inherent_order_label = ifelse(
stacked == T | ms_stacked == T,
T,
inherent_order_label
)
#Grouping flags
group_test <- dataset %>%
dplyr::mutate(
test = ifelse(
!!flag3 == F,
F,
T
)
)
grouped = ifelse(
group_test$test == T,
T,
F
)
#Flags for putting a specific label/group first
specifically_ordered = ifelse(
is.character(label_specific) == T,
T,
F
)
specifically_ordered_group = ifelse(
is.character(group_specific) == T,
T,
F
)
### Prep work
dataset <- reverse_label(dataset, grouped, !!flag3, !!flag2, rev_label)
### (1) ungrouped Section
if(grouped == F){
dataset <- section_ungrouped(dataset, grouped, specifically_ordered, inherent_order_label, stacked, label_specific)
### Arranging WITH grouping variables
} else{
### (2) Grouped Section: arranging for specific group and label to be first
dataset <- section_grouped_specifics(dataset, specifically_ordered, label_specific,inherent_order_label, group_var, inherent_order_group, group_specific, specifically_ordered_group, rev_group)
### (3) Grouped Section: arranging for specific group to be first
dataset <- section_grouped_specifics_nolab(dataset, specifically_ordered, inherent_order_label, group_var, inherent_order_group, group_specific, specifically_ordered_group, rev_group, rev_label)
### (4) Grouped Section: inherent order of grouping variables
dataset <- section_grouped_ordered(dataset, specifically_ordered, label_specific, inherent_order_label, group_var, inherent_order_group, group_specific, specifically_ordered_group, rev_group, rev_label)
### (5) Grouped Section: arranging grouping variables if group NOT inherently ordered
dataset <- section_grouped_unordered(dataset, specifically_ordered, label_specific, inherent_order_label, group_var, inherent_order_group, group_specific, specifically_ordered_group, rev_group, rev_label)
}
### Horizontal
dataset <- horizontal_chart(dataset, horizontal, grouped)
### Stacked
dataset <- stacked_chart(dataset, stacked, grouped, inherent_order_group, specifically_ordered_group)
dataset <- stacked_chart_ms(dataset, ms_stacked, grouped, inherent_order_group, specifically_ordered_group)
}
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
inherent_order_group = T,
#rev_label = T,
#rev_group = T,
#label_specific = 'Three',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar_hor()
#chart <- groupedbar()
chart
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
inherent_order_group = T,
rev_label = T,
#rev_group = T,
#label_specific = 'Three',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar_hor()
#chart <- groupedbar()
chart
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
inherent_order_group = T,
rev_label = T,
#rev_group = T,
label_specific = 'Three',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar_hor()
#chart <- groupedbar()
chart
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
inherent_order_group = T,
rev_label = T,
#rev_group = T,
label_specific = 'One',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar_hor()
#chart <- groupedbar()
chart
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
inherent_order_group = T,
#rev_label = T,
#rev_group = T,
label_specific = 'One',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar_hor()
#chart <- groupedbar()
chart
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
inherent_order_group = T,
#rev_label = T,
#rev_group = T,
#label_specific = 'One',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar_hor()
#chart <- groupedbar()
chart
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
inherent_order_group = T,
rev_label = T,
#rev_group = T,
#label_specific = 'One',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar_hor()
#chart <- groupedbar()
chart
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
#inherent_order_group = T,
#rev_label = T,
#rev_group = T,
#label_specific = 'One',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar_hor()
#chart <- groupedbar()
chart
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
#inherent_order_group = T,
rev_label = T,
#rev_group = T,
#label_specific = 'One',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar_hor()
#chart <- groupedbar()
chart
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
#inherent_order_group = T,
rev_label = T,
rev_group = T,
#label_specific = 'One',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar_hor()
#chart <- groupedbar()
chart
freqs1 <- grouped_freqs %>%
dplyr::arrange(
desc(result)
)  %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
) %>%
reverse_label_unordered(rev_label) %>%
dplyr::filter(
label == label[1]
) %>% reverse_group(rev_group)
freqs1 <- grouped_freqs %>%
dplyr::arrange(
desc(result)
)  %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
) %>%
reverse_label_unordered(T) %>%
dplyr::filter(
label == label[1]
) %>% reverse_group(rev_group)
freqs1 <- grouped_freqs %>%
dplyr::arrange(
desc(result)
)  %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
) %>%
reverse_label_unordered(T) %>%
dplyr::filter(
label == label[1]
) %>% reverse_group(T)
freqs1 <- grouped_freqs %>%
dplyr::arrange(
desc(result)
)
freqs1 <- grouped_freqs %>%
dplyr::arrange(
desc(result)
)  %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
)
freqs1 <- grouped_freqs %>%
dplyr::arrange(
desc(result)
)  %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
) %>%
reverse_label_unordered(T) %>%
dplyr::filter(
label == label[1]
)
freqs1 <- grouped_freqs %>%
dplyr::arrange(
desc(result)
)  %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
) %>%
reverse_label_unordered(T) %>%
dplyr::filter(
label == label[1]
) %>% reverse_group(T)
freqs1 <- grouped_freqs %>%
dplyr::arrange(
desc(result)
)  %>%
dplyr::mutate(
group_var = district,
label = forcats::fct_inorder(label)
) %>%
reverse_label_unordered(T) %>%
dplyr::filter(
label == label[1]
) %>% reverse_group(T)
View(freqs1)
freqs2 <- grouped_freqs %>%
dplyr::filter(
label != 'One'
) %>%
dplyr::arrange(
desc(result)
) %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
)
freqs2 <- grouped_freqs %>%
dplyr::filter(
label != 'One'
) %>%
dplyr::arrange(
desc(result)
) %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
) %>% reverse_label_unordered(rev_label)
freqs2 <- grouped_freqs %>%
dplyr::filter(
label != 'One'
) %>%
dplyr::arrange(
desc(result)
) %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
) %>% reverse_label_unordered(T)
View(freqs2)
freqs2 <- grouped_freqs %>%
dplyr::filter(
label != 'One'
) %>%
dplyr::arrange(
desc(result)
) %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
) %>% reverse_label_unordered(F)
freqs2 <- grouped_freqs %>%
dplyr::filter(
label != 'One'
) %>%
dplyr::arrange(
desc(result)
) %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
) %>% reverse_label_unordered(T)
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
#inherent_order_group = T,
rev_label = T,
rev_group = T,
#label_specific = 'One',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar_hor()
#chart <- groupedbar()
chart
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
#inherent_order_group = T,
#rev_label = T,
rev_group = T,
#label_specific = 'One',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar_hor()
#chart <- groupedbar()
chart
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
#inherent_order_group = T,
rev_label = T,
rev_group = T,
#label_specific = 'One',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar_hor()
#chart <- groupedbar()
chart
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
#inherent_order_group = T,
#rev_label = T,
rev_group = T,
#label_specific = 'One',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar_hor()
#chart <- groupedbar()
chart
frequencies <- grouped_freqs %>%
order_label(
group_var = district,
horizontal = T,
#inherent_order_label = T,
#inherent_order_group = T,
#rev_label = T,
#rev_group = T,
#label_specific = 'One',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar_hor()
#chart <- groupedbar()
chart
devtools::install_github('nick-moffitt/orderlabe'l)
devtools::install_github('nick-moffitt/orderlabel')
library(orderlabel)
?order_label
