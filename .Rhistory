mutate(
group_var = district,
label = case_when(
label == 'One' ~ 'Other',
label == 'Two' ~ 'None of the above',
T ~ label
)
) %>%
order_label(
group_var = district,
#horizontal = T,
#inherent_order_label = T,
#inherent_order_group = T,
#rev_label = T,
#rev_group = T,
#label_specific = 'Three',
#group_specific = 'District 2' # Add 4 iterations, both specifics
)
chart <- groupedbar()
chart
library(devtools)
library(roxygen2)
#setwd('~/Dropbox (Y2 Analytics)/Y2 Analytics Team Folder/Resources/Packages/')
#create('y2artisan')
#Process documentation
# setwd('~/Documents/GitHub/y2artisan/')
setwd('~/Dropbox (Y2 Analytics)/Y2 Analytics Team Folder/Resources/Packages/orderlabel/')
document()
devtools::install_github('nick-moffitt/orderlabel')
library(orderlabel)
#### Testing function ungrouped ####
rm(frequencies)
frequencies <- ungrouped_freqs %>%
order_label(
#horizontal = T,
#inherent_order_label = T,
#rev_label = T,
#label_specific = 'Two',
# label_var = stat
)
chart <- bar1()
#chart <- bar1_hor()
chart
ggchart_save('test')
#### None Other Test ####
### Ungrouped
frequencies <- ungrouped_freqs %>%
mutate(
label = case_when(
label == 'One' ~ 'Other',
label == 'Two' ~ 'None of the above',
T ~ label
)
) %>%
order_label(
#horizontal = T,
#inherent_order_label = T,
#rev_label = T,
#label_specific = 'Three',
)
chart <- bar1()
#chart <- bar1_hor()
chart
devtools::install_github('nick-moffitt/orderlabel')
library(orderlabel)
#### Test Data ####
library(plyr)
library(tidyverse)
library(showtext)
library(labelled)
library(scales)
library(ggplot2)
library(hrbrthemes)
library(officer)
library(mschart)
library(showtext)
library(WriteXLS)
library(y2clerk)
#devtools::install_github('nick-moffitt/orderlabel')
library(orderlabel)
responses <- readRDS(
'~/Dropbox (Y2 Analytics)/Y2 Analytics Team Folder/Projects/Herriman/Parks Plan 2019/Data/Weighted and Geocoded FINAL.rds'
)
CHART_PATH = '~/Dropbox (Y2 Analytics)/Y2 Analytics Team Folder/Statsivus for the Restivus/Order label, NSM/Charts/'
responses <- responses %>%
mutate(
QFEE1_top = case_when(QUSEFEE1 == 1 | QUSEFEE1 == 2 ~ 1, is.na(QUSEFEE1) ~ NA_real_, T ~ 0),
QFEE2_top = case_when(QUSEFEE2 == 1 | QUSEFEE2 == 2 ~ 1, is.na(QUSEFEE2) ~ NA_real_, T ~ 0),
QFEE3_top = case_when(QUSEFEE3 == 1 | QUSEFEE3 == 2 ~ 1, is.na(QUSEFEE3) ~ NA_real_, T ~ 0),
QFEE4_top = case_when(QUSEFEE4 == 1 | QUSEFEE4 == 2 ~ 1, is.na(QUSEFEE4) ~ NA_real_, T ~ 0)
)
chart
grouped_freqs <- responses %>%
filter(!is.na(district)) %>%
group_by(district) %>%
freqs(
QFEE1_top,
QFEE2_top,
QFEE3_top,
QFEE4_top,
nas = F,
wt = weights
) %>%
filter(label == 1) %>%
ungroup() %>%
mutate(
label = mapvalues(
variable,
from = str_c('QFEE', 1:4, '_top'),
to = c(
'One',
'Two',
'Three',
'Four'
)
)
)
ungrouped_freqs <- responses %>%
freqs(
QFEE1_top,
QFEE2_top,
QFEE3_top,
QFEE4_top,
nas = F,
wt = weights
) %>%
filter(label == 1) %>%
ungroup() %>%
mutate(
label = mapvalues(
variable,
from = str_c('QFEE', 1:4, '_top'),
to = c(
'One',
'Two',
'Three',
'Four'
)
)
)
ungrouped_freqs
bar1 <- function(
data = frequencies,
result = frequencies$result,
label = frequencies$label,
percent_label = frequencies$percent_label,
spaces = 10,
percent_size = 10,
color1 = green,
axis_text_size = 12
) {
chart <- ggplot(
frequencies,
aes(
x = label,
y = result,
fill = color1,
color = color1
)
) +
geom_bar(
stat = "identity",
width = .75,
position = position_dodge(width = .9)
) +
geom_text(
aes(
label = percent_label
),
family = "flama",
position = position_dodge(width = .9),
vjust = -.5,
size = percent_size
) +
scale_fill_manual(
values = c(color1)
) +
scale_color_manual(
guide = FALSE,
values = c(color1)
) +
scale_y_percent(
limits = c(0, max(frequencies$result) + ifelse(max(frequencies$result) > .5, .12, .07))
) +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = spaces, simplify = FALSE), paste, collapse="\n")) +
theme_minimal() +
theme( legend.text = element_text(size = 12),
axis.text = element_text(size = axis_text_size),
panel.grid = element_blank(),
axis.title = element_blank(),
legend.title = element_blank(),
axis.text.y = element_blank(),
strip.text = element_text(size = 12),
legend.position = "none"
)
}
ggchart_save <- function(chartname, width = 11, height = 5.5){
ggsave(
str_c(CHART_PATH, '/', chartname, '.png'),
chart + font_type,
width = width,
height = height,
bg = 'transparent'
)
}
stacked_bar <- function(
x_var = frequencies$group_var,
colors = div5lab,
fills = div5fill,
grouped_var = frequencies$label,
percent_size = 6
) {
ggplot(
data = frequencies,
aes(
x = x_var,
y = result,
fill = grouped_var
)
) +
geom_bar(
stat = 'identity',
width = 0.75,
position = 'fill'
) +
geom_text(
aes(
label = percent_label,
color = grouped_var
),
position = position_fill(vjust = 0.5),
family = 'flama',
size = percent_size
) +
coord_flip() +
scale_color_manual(
guide = F,
values = colors
) +
scale_fill_manual(
guide = guide_legend(reverse = TRUE),
values = rev(fills)
) +
theme_minimal() +
theme(
axis.title = element_blank(),
panel.grid = element_blank(),
axis.text.y = element_text(size = 12),
axis.text.x = element_blank(),
legend.title = element_blank(),
legend.position = 'top'
) +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 50, simplify = FALSE), paste, collapse="\n"))
}
#Colors / Fonts
font_add(
family='flama',
regular='Flama-Medium.otf',
bold='Flama-Bold.otf'
)
font_type <- theme(text=element_text(family='flama'))
showtext_auto()
green <- '#4C731E'
blue <- '#1E4C73'
grey <- '#666666'
region_colors <- c(
'#FFA59A', #1, red
'#AAcc90', #2, green
'#a8abc6', #3, blue
'#f5d69b' #4, yellow/orange
)
district1 <- '#FFA59A' #1, red
district2 <- '#AAcc90' #2, green
district3 <- '#a8abc6' #3, blue
district4 <- '#f5d69b' #4, yellow/orange
div5fill <- c(
'#4C731E',
'#8FA872',
'#D2DCC7',
'#728FA8',
'#1E4C73'
)
div5col <- c(
'#4C731E',
'#4C731E',
'#4C731E',
'#1E4C73',
'#1E4C73'
)
div5lab <- c(
'white',
'white',
'#666666',
'white',
'white'
)
div5fill2 <- c(
'#1E4C73',
'#728FA8',
'#D2DCC7',
'#8FA872',
'#4C731E'
)
div5fill3 <- c(
'#1E4C73',
'#728FA8',
'#AAADA7',
'#8FA872',
'#4C731E'
)
div5col2 <- c(
'#1E4C73',
'#1E4C73',
'#4C731E',
'#4C731E',
'#4C731E'
)
sca5fill <- c(
'#4C731E',
'#799656',
'#A6B98F',
'#D2DCC7',
'#E9EDE3'
)
sca5col <- c(
'#4C731E',
'#4C731E',
'#4C731E',
'#4C731E',
'#4C731E'
)
bar1_hor <- function(
data = frequencies,
result = frequencies$result,
label = frequencies$label,
percent_label = frequencies$percent_label,
spaces = 100,
percent_size = 10,
color1 = green,
nudge = -.35
) {
chart <- ggplot(
frequencies,
aes(
x = label,
y = result,
fill = color1,
color = color1
)
) +
geom_bar(
stat = "identity",
width = .75,
position = position_dodge(width = .9)
) +
geom_text(
aes(
label = percent_label
),
family = "flama",
position = position_dodge(width = .9),
hjust = nudge,
size = percent_size
) +
scale_fill_manual(
values = c(color1)
) +
scale_color_manual(
guide = FALSE,
values = c(color1)
) +
scale_y_percent(
limits = c(0, max(frequencies$result) + ifelse(max(frequencies$result) > .5, .12, .07))
) +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = spaces, simplify = FALSE), paste, collapse="\n")) +
theme_minimal() +
theme( legend.text = element_text(size = 12),
axis.text = element_text(size = 14),
panel.grid = element_blank(),
axis.title = element_blank(),
legend.title = element_blank(),
axis.text.x = element_blank(),
strip.text = element_text(size = 12),
legend.position = "none"
) +
coord_flip()
}
groupedbar <- function(
data = frequencies,
result = frequencies$result,
label = frequencies$label,
source = frequencies$group_var,
percent_label = frequencies$percent_label,
spaces = 10,
percent_size = 10,
axis_text_size = 12
) {
chart <- ggplot(
frequencies,
aes(
x = label,
y = result,
group = source
)
) +
geom_bar(
aes(
fill = source
),
stat = "identity",
width = .75,
position = position_dodge(width = .9)
) +
geom_text(
aes(
label = percent_label,
color = source
),
family = "flama",
position = position_dodge(width = .9),
vjust = -.5,
size = percent_size
) +
scale_fill_manual(
values = region_colors
) +
scale_color_manual(
guide = FALSE,
values = region_colors
) +
scale_y_percent(
limits = c(0, max(frequencies$result) + ifelse(max(frequencies$result) > .5, .12, .07))
) +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = spaces, simplify = FALSE), paste, collapse="\n")) +
theme_minimal() +
theme( legend.text = element_text(size = 12),
axis.text = element_text(size = axis_text_size),
panel.grid = element_blank(),
axis.title = element_blank(),
legend.title = element_blank(),
axis.text.y = element_blank(),
strip.text = element_text(size = 12),
legend.position = "top"
)
}
groupedbar_hor <- function(
data = frequencies,
result = frequencies$result,
label = frequencies$label,
source = frequencies$group_var,
percent_label = frequencies$percent_label,
spaces = 100,
percent_size = 10,
axis_text_size = 12,
colors = region_colors,
nudge = -.35
) {
chart <- ggplot(
frequencies,
aes(
x = label,
y = result,
group = source
)
) +
geom_bar(
aes(
fill = source
),
stat = "identity",
width = .75,
position = position_dodge(width = .9)
) +
geom_text(
aes(
label = percent_label,
color = source
),
family = "flama",
position = position_dodge(width = .9),
hjust = nudge,
size = percent_size
) +
scale_fill_manual(
values = colors
) +
scale_color_manual(
guide = FALSE,
values = colors
) +
scale_y_percent(
limits = c(0, max(frequencies$result) + ifelse(max(frequencies$result) > .5, .12, .07))
) +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = spaces, simplify = FALSE), paste, collapse="\n")) +
theme_minimal() +
theme( legend.text = element_text(size = 12),
axis.text = element_text(size = axis_text_size),
panel.grid = element_blank(),
axis.title = element_blank(),
legend.title = element_blank(),
axis.text.x = element_blank(),
strip.text = element_text(size = 12),
legend.position = "top"
) +
guides(fill = guide_legend(reverse = T)) +
coord_flip()
}
names <- names(responses) %>% as_tibble()
#### Function documentation ####
ls('package:y2artisan')
#### Function documentation ####
ls('package:orderlabel')
