) %>%
dplyr::mutate(
group_var = forcats::fct_inorder(group_var)
)
} else{
dataset <- dataset
}
}
#### Grouped Unordered 3 ####
grouped_unordered3 <- function(
dataset,
inherent_order_label,
inherent_order_group,
specifically_ordered,
rev_group,
rev_label
){
if(inherent_order_label == F &
specifically_ordered == F
){
freqs1 <- dataset %>%
dplyr::arrange(
desc(result)
)  %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
) %>%
reverse_label_unordered(rev_label) %>%
dplyr::filter(
label == label[1]
) %>% reverse_group(rev_group)
group1 = freqs1$label[1]
freqs2 <- dataset %>%
dplyr::filter(
label != group1
) %>%
dplyr::arrange(
desc(result)
) %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
) %>% reverse_label_unordered(rev_label)
dataset <- dplyr::bind_rows(freqs1, freqs2) %>%
dplyr::mutate(
group_var = forcats::fct_inorder(group_var),
percent_label = ifelse(
label == group1 & group_var == group_var[1],
str_c(result * 100, '%'),
str_c(result * 100)
)
) %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
)
} else{
dataset <- dataset
}
}
#### Grouped Unordered 4 ####
grouped_unordered4 <- function(
dataset,
inherent_order_label,
inherent_order_group,
specifically_ordered,
rev_group
){
if(inherent_order_label == T &
specifically_ordered == F
)
{
dataset <- dataset %>%
dplyr::arrange(
value, desc(result), group_var
) %>% reverse_group(rev_group) %>%
dplyr::mutate(
label = forcats::fct_inorder(label),
percent_label = ifelse(
label == label[1] & group_var == group_var[1],
str_c(result * 100, '%'),
str_c(result * 100)
)
) %>%
dplyr::mutate(
group_var = forcats::fct_inorder(group_var)
)
} else{
dataset <- dataset
}
}
#### topbox ####
topbox <- function(
dataset,
topbox = NULL
) {
if(is.null(topbox) == F){
top2box <- topbox + 1
dataset <- spreading_top2(dataset, top2box)
dataset <- ordering_top2(dataset)
} else{ #is.null(topbox)
dataset <- dataset
}
}
### spreading_top2
spreading_top2 <- function(dataset, top2box) {
test1 <- dataset %>%
dplyr::select(
-result
)
test2 <- dataset %>%
dplyr::mutate(value1 = value) %>%
dplyr::select(
group_var,
value1,
result
) %>%
tidyr::spread(
key = value1,
value = result
) %>%
dplyr::mutate(
topbox = dplyr::select(., 2:top2box) %>%
rowSums(na.rm = T)
) %>%
tidyr::gather(
key = value,
value = result,
-group_var,
-topbox
) %>%
dplyr::mutate(
value = as.numeric(value)
)
dataset <- dplyr::left_join(
test1,
test2
)
}
### ordering_top2
ordering_top2 <- function(dataset) {
dataset <- dataset %>%
dplyr::arrange(
topbox %>% desc
) %>%
dplyr::mutate(
group_var = forcats::fct_inorder(group_var)
) %>%
dplyr::mutate(
label = forcats::fct_inorder(label)
) %>%
dplyr::mutate(
percent_label = ifelse(
label == label[1] & group_var == group_var[1],
stringr::str_c(result * 100, '%'),
stringr::str_c(result * 100)
)
)
}
#### Horizontal ####
horizontal_chart <- function(
dataset,
horizontal,
grouped
){
if(horizontal == T){
if(grouped == F){
dataset <- dataset %>%
dplyr::mutate(
label = forcats::fct_rev(label)
)
} else{ #grouped == T
dataset <- dataset %>%
dplyr::mutate(
label = forcats::fct_rev(label)
) %>%
dplyr::mutate(
group_var = forcats::fct_rev(group_var)
)
}
} else{
dataset <- dataset
}
}
#### Stacked ####
stacked_chart <- function(
dataset,
stacked,
grouped,
inherent_order_group,
specifically_ordered
){
if(stacked == 'gg' &
grouped == F){
dataset <- dataset  %>%
dplyr::mutate(
label = forcats::fct_rev(label)
)
} else if(stacked == 'gg' &
grouped == T){
dataset <- dataset %>%
dplyr::mutate(
label = forcats::fct_rev(label)
) %>%
dplyr::mutate(
group_var = forcats::fct_rev(group_var)
)
} else{
dataset <- dataset
}
}
#### MS Stacked ####
stacked_chart_ms <- function(
dataset,
stacked,
grouped,
inherent_order_group,
specifically_ordered_group
){
if(stacked == 'ms' &
grouped == T){
dataset <- dataset %>%
dplyr::mutate(
group_var = forcats::fct_rev(group_var)
)
} else{
dataset <- dataset
}
}
#### None / Other ####
none_other <- function(
dataset,
none_other,
grouped
){
if(none_other == T){
dataset <- dataset %>%
dplyr::arrange(
label = forcats::fct_relevel(
label,
"Other",
'None of the above',
"Prefer not to say",
after = Inf
)
) %>%
dplyr::mutate(
label = forcats::fct_inorder(label),
percent_label = ifelse(
label == label[1],
str_c(result * 100, '%'),
str_c(result * 100)
)
)
} else{
dataset <- dataset
}
#For grouped
if(grouped == T & none_other == T){
dataset <- dataset %>%
dplyr::mutate(
group_var = forcats::fct_inorder(group_var),
percent_label = ifelse(
label == label[1] & group_var == group_var[1],
str_c(result * 100, '%'),
str_c(result * 100)
)
)
} else{
dataset <- dataset
}
}
frequencies <- tibble(
label = c(
'Brand 1',
'Brand 2',
'Brand 3',
'Brand 4',
'Brand 5',
'Other, please specify',
'Prefer not to answer',
'I find none of these brand appealing',
'Brand 6',
'Brand 7 (some description)'
),
result = c(1:10)
)
frequencies <- frequencies %>% other_rm()
frequencies <- frequencies %>% other_rm() %>% order_label()
chart <- gg_single()
ggchart_save('Test')
frequencies <- frequencies %>% other_rm() %>%
order_label(
rev_label = T
)
chart <- gg_single()
ggchart_save('Test')
frequencies <- frequencies %>% other_rm() %>%
order_label(
inherent_order_label = T
)
chart <- gg_single()
ggchart_save('Test')
frequencies <- frequencies %>% other_rm() %>%
order_label(
inherent_order_label = T,
rev_label = T
)
chart <- gg_single()
ggchart_save('Test')
frequencies <- frequencies %>% other_rm() %>%
order_label(
inherent_order_label = T,
horizontal = T
)
chart <- gg_single(direction = 'horizontal')
ggchart_save('Test')
frequencies <- frequencies %>% other_rm() %>%
order_label(
inherent_order_label = T,
horizontal = T,
rev_label = T
)
chart <- gg_single(direction = 'horizontal')
ggchart_save('Test')
library(devtools)
library(roxygen2)
#Process documentation
setwd('~/Documents/GitHub/orderlabel/man/')
document()
devtools::install_github('nick-moffitt/orderlabel')
#devtools::install_github('nick-moffitt/orderlabel')
library(orderlabel)
frequencies <- tibble(
label = c(
'Brand 1',
'Brand 2',
'Brand 3',
'Brand 4',
'Brand 5',
'Other, please specify',
'Prefer not to answer',
'I find none of these brand appealing',
'Brand 6',
'Brand 7 (some description)'
),
result = c(1:10)
)
frequencies <- frequencies %>% other_rm()
frequencies <- frequencies %>% other_rm() %>%
order_label(
inherent_order_label = T,
horizontal = T,
rev_label = T
)
chart <- gg_single(direction = 'horizontal')
ggchart_save('Test')
frequencies <- frequencies %>% other_rm() %>%
order_label(
inherent_order_label = T,
horizontal = T
)
chart <- gg_single(direction = 'horizontal')
ggchart_save('Test')
frequencies <- tibble(
label = c(
'Brand 1',
'Brand 2',
'Brand 3',
'Brand 4',
'Brand 5',
'Other, please specify',
'Prefer not to answer',
'I find none of these brand appealing',
'Brand 6',
'Brand 7 (some description)'
),
result = c(1:10)
)
frequencies <- frequencies %>% other_rm()
frequencies <- frequencies %>% other_rm() %>%
order_label(
inherent_order_label = T,
horizontal = T
)
chart <- gg_single(direction = 'horizontal')
ggchart_save('Test')
frequencies <- frequencies %>% other_rm() %>%
order_label(
inherent_order_label = T,
horizontal = T,
rev_label = T
)
chart <- gg_single(direction = 'horizontal')
ggchart_save('Test')
View(frequencies)
responses <- read_rds('~/Dropbox (Y2 Analytics)/Y2 Analytics Team Folder/Projects/Utah League of Cities and Towns/2019/Spring 2019 - Emergency Prep/Data/Weighted Data KLG.RDS')
frequencies <- responses %>%
freqs(QINCOME) %>%
order_label()
gg_single()
chart <- gg_single()
ggchart_save('test')
frequencies <- responses %>%
freqs(QINCOME) %>%
order_label(
inherent_order_label = T
)
chart <- gg_single()
ggchart_save('test')
frequencies <- responses %>%
freqs(QINCOME) %>%
order_label(
inherent_order_label = T,
rev_label = T
)
chart <- gg_single()
ggchart_save('test')
QINCOME,
nas = F) %>%
order_label(
frequencies <- responses %>%
freqs(
QINCOME,
nas = F
)
)
frequencies <- responses %>%
freqs(
QINCOME,
nas = F
) %>%
order_label(
inherent_order_label = T,
rev_label = T
)
chart <- gg_single()
ggchart_save('test')
chart <- gg_single(direction = 'horizontal')
ggchart_save('test')
frequencies <- responses %>%
freqs(
QINCOME,
nas = F
) %>%
order_label(
inherent_order_label = T,
horizontal = T
)
chart <- gg_single(direction = 'horizontal')
ggchart_save('test')
frequencies <- responses %>%
freqs(
QINCOME,
nas = F
) %>%
order_label(
inherent_order_label = T,
horizontal = T,
rev_label = T
)
chart <- gg_single(direction = 'horizontal')
ggchart_save('test')
frequencies <- responses %>%
freqs(
QINCOME,
nas = F
) %>%
mutate(
colors = ifelse(label == 'Prefer not to say', 1, 0)
) %>%
order_label(
inherent_order_label = T,
horizontal = T,
rev_label = T
)
frequencies <- responses %>%
freqs(
QINCOME,
nas = F
) %>%
mutate(
colors = ifelse(label == 'Prefer not to say', 1, 0)
) %>%
order_label(
inherent_order_label = T,
horizontal = T,
rev_label = T
)
chart <- gg_single(
direction = 'horizontal',
fills = c('green', 'gray'),
color_var = colors
)
ggchart_save('test')
frequencies <- responses %>%
freqs(
QINCOME,
nas = F
) %>%
mutate(
colors = ifelse(label == 'Prefer not to say', '1', '0')
) %>%
order_label(
inherent_order_label = T,
horizontal = T,
rev_label = T
)
chart <- gg_single(
direction = 'horizontal',
fills = c('green', 'gray'),
color_var = colors
)
ggchart_save('test')
