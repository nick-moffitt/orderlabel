% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/order_label.R
\name{order_label}
\alias{order_label}
\title{Order your data and add percent labels}
\usage{
order_label(
  dataset,
  label_var = label,
  inherent_order_label = F,
  group_var = F,
  inherent_order_group = F,
  label_specific = NA,
  group_specific = NA,
  stacked = "NULL",
  horizontal = F,
  rev_label = F,
  rev_group = F,
  none_other = T,
  num_fmt = c("percent", "general"),
  topbox = NULL
)
}
\arguments{
\item{dataset}{The name of the data frame for the function to modify, usually piped in after running freqs.}

\item{label_var}{DEFAULT = label; name of variable to be ordered}

\item{inherent_order_label}{DEFAULT = F; If F, puts labels in descending order. If T, puts labels in the inherent order from survey (Strongly agree to strongly disagree)}

\item{group_var}{DEFAULT = F; Add the name of the grouping variable if your data is grouped}

\item{inherent_order_group}{DEFAULT = F; If F, puts groups in descending order. If T, puts groups in the order they are factored (District 1, District 2...)}

\item{label_specific}{DEFAULT = NA; If T, puts the specified label first. ex: 'brand1' would put label called brand1 before all other labels}

\item{group_specific}{DEFAULT = NA; If T, puts the specified group first. ex: 'brand1' would put group called brand1 before all other groups}

\item{stacked}{DEFAULT = 'NULL'; For stacked barcharts, use stacked = 'gg' for ggplot and 'ms' for mschart}

\item{horizontal}{DEFAULT = F; For horizontal charts (grouped or ungrouped), use horizontal = T. Specifying stacked = 'gg' or 'ms' automatically makes inherent_order_label = T}

\item{rev_label}{DEFAULT = F; To reverse the order of labels in a chart, use rev_label = T}

\item{rev_group}{DEFAULT = F; To reverse the order of groups in a chart, use rev_group = T}

\item{none_other}{DEFAULT = T; Automatically puts "Other", "None of the above", and "Prefer not to say" options at the bottom. Change to F to let them stay ordered elsewhere in the chart}

\item{num_fmt}{DEFAULT = "percent"; Other option is "general", use this when working with whole numbers rather than percents/proportions}

\item{topbox}{DEFAULT = NULL; Can be set to a numeric value, ex: topbox = 2 to order by top2box instead of topbox}
}
\description{
Takes a dataframe (frequencies) and orders the labels and groups while adding percent labels for use in ggplot.
}
\examples{
# Ungrouped, put in descending order of the result
frequencies <- tibble(
  label = c('Brand 1', 'Brand 2', 'Brand 3', 'Brand 4', 'Brand 5'),
  result = c(.25, .15, .20, .10, .30),
  value = c(1, 2, 3, 4, 5)
) \%>\% order_label()

# Grouped, with an inherent order for the label, or the brand
frequencies <- tibble(
  label = rep(c('Brand 1', 'Brand 2', 'Brand 3', 'Brand 4', 'Brand 5'), 2),
  result = c(.20, .20, .30, .10, .20, .20, .30, .20, .20, .10),
  value = rep(c(1, 2, 3, 4, 5), 2),
  group_var = c(rep('Group A', 5), rep('Group B', 5))
) \%>\% order_label(
  group_var = group_var,
  inherent_order_label = T
)

# Stacked, will be using this frequencies in an mschart later on
frequencies <- tibble(
  label = rep(c('Promoter', 'Passive', 'Detractor'), 3),
  result = c(.33, .33, .34, .20, .30, .50, .25, .50, .25),
  value = rep(c(1, 2, 3), 3),
  group_var = c(rep('Group A', 3), rep('Group B', 3), rep('Group C', 3))
) \%>\% order_label(
  group_var = group_var,
  stacked = 'ms'
)
}
\keyword{arrange}
\keyword{label}
\keyword{order}
